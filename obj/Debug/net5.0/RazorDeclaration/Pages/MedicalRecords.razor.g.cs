// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace MedicoverClone.Pages
{
    #line default
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using System.Net.Http

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using Microsoft.AspNetCore.Authorization

#nullable disable
    ;
#nullable restore
#line 3 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization

#nullable disable
    ;
#nullable restore
#line 4 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms

#nullable disable
    ;
#nullable restore
#line 5 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing

#nullable disable
    ;
#nullable restore
#line 6 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using Microsoft.AspNetCore.Components.Web

#nullable disable
    ;
#nullable restore
#line 7 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization

#nullable disable
    ;
#nullable restore
#line 8 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using Microsoft.JSInterop

#nullable disable
    ;
#nullable restore
#line 9 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using MedicoverClone

#nullable disable
    ;
#nullable restore
#line 10 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\_Imports.razor"
using MedicoverClone.Shared

#nullable disable
    ;
#nullable restore
#line 2 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
 using MedicoverClone.Domain

#nullable disable
    ;
#nullable restore
#line 3 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
 using MedicoverClone.Services

#nullable disable
    ;
#nullable restore
#line 4 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
 using MedicoverClone.Services.Interfaces

#line default
#line hidden
#nullable disable
    ;
    [global::Microsoft.AspNetCore.Components.RouteAttribute(
    // language=Route,Component
#nullable restore
#line 1 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
      "/medical-records"

#line default
#line hidden
#nullable disable
    )]
    #nullable restore
    public partial class MedicalRecords : global::Microsoft.AspNetCore.Components.ComponentBase
    #nullable disable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 171 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
       
    private List<MedicalHistory> allHistories = new List<MedicalHistory>();
    private List<MedicalHistory> filteredHistories = new List<MedicalHistory>();
    private List<Patient> patients = new List<Patient>();
    private MedicalHistory currentHistory = new MedicalHistory();
    private int selectedPatientId;
    private bool isLoading = true;
    private bool showEditModal = false;
    private bool showDeleteModal = false;
    private string _searchTerm = string.Empty;
    private string searchTerm
    {
        get => _searchTerm;
        set
        {
            if (_searchTerm != value)
            {
                _searchTerm = value;
                FilterHistories();
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        isLoading = false;
    }

    private async Task LoadData()
    {
        var historiesTask = MedicalHistoryService.GetAllMedicalHistoriesAsync();
        var patientsTask = PatientService.GetAllPatientsAsync();

        await Task.WhenAll(historiesTask, patientsTask);

        allHistories = (await historiesTask).ToList();
        patients = (await patientsTask).ToList();

        FilterHistories();
    }

    private void FilterHistories()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            filteredHistories = allHistories
                .OrderByDescending(h => h.DateOfVisit)
                .ToList();
        }
        else
        {
            filteredHistories = allHistories
                .Where(h =>
                    (h.Patient?.FirstName?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) == true) ||
                    (h.Patient?.LastName?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) == true) ||
                    (h.Diagnosis?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) == true) ||
                    (h.Treatment?.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) == true))
                .OrderByDescending(h => h.DateOfVisit)
                .ToList();
        }
        StateHasChanged(); // Force UI update
    }

    private void ShowCreateModal()
    {
        currentHistory = new MedicalHistory
        {
            DateOfVisit = DateTime.Today,
            Patient = new Patient()
        };
        selectedPatientId = 0;
        showEditModal = true;
    }

    private void ViewDetails(int id)
    {
        NavigationManager.NavigateTo($"/medical-history/{id}");
    }

    private async Task EditHistory(int id)
    {
        currentHistory = await MedicalHistoryService.GetMedicalHistoryByIdAsync(id);
        selectedPatientId = currentHistory.Patient?.PatientId ?? 0;
        showEditModal = true;
    }

    private async Task SaveHistory()
    {
        currentHistory.Patient = patients.FirstOrDefault(p => p.PatientId == selectedPatientId);

        if (currentHistory.HistoryId == 0)
        {
            await MedicalHistoryService.AddMedicalHistoryAsync(currentHistory);
        }
        else
        {
            await MedicalHistoryService.UpdateMedicalHistoryAsync(currentHistory);
        }

        showEditModal = false;
        await LoadData();
    }

    private void CloseModal()
    {
        showEditModal = false;
    }

    private async Task DeleteHistory(int id)
    {
        currentHistory = await MedicalHistoryService.GetMedicalHistoryByIdAsync(id);
        showDeleteModal = true;
    }

    private async Task ConfirmDelete()
    {
        await MedicalHistoryService.DeleteMedicalHistoryAsync(currentHistory.HistoryId);
        showDeleteModal = false;
        await LoadData();
    }

    private void CloseDeleteModal()
    {
        showDeleteModal = false;
    }

#line default
#line hidden
#nullable disable

        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line 7 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
        NavigationManager

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 7 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
                          NavigationManager

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line 6 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
        IPatientService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 6 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
                        PatientService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private 
#nullable restore
#line 5 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
        IMedicalHistoryService

#line default
#line hidden
#nullable disable
         
#nullable restore
#line 5 "C:\Users\dgtla\source\repos\MedicoverClone\MedicoverClone\Pages\MedicalRecords.razor"
                               MedicalHistoryService

#line default
#line hidden
#nullable disable
         { get; set; }
         = default!;
    }
}
#pragma warning restore 1591
