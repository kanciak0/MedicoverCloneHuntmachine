@page "/"
@using MedicoverClone.Domain
@using MedicoverClone.Services.Interfaces
@using MedicoverClone.ViewModels
@inject IHomePageDataAggregator DataAggregator

<PageTitle>Medical Clinic Dashboard</PageTitle>

<div class="dashboard-container">
    <div class="dashboard-header">
        <h1>Clinic Overview</h1>
        <p class="text-muted">@DateTime.Now.ToString("dddd, MMMM dd, yyyy")</p>
    </div>

    @if (isLoading)
    {
        <div class="loading-spinner">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <!-- Summary Cards -->
        <div class="row summary-cards">
            <div class="col-md-4 mb-4">
                <div class="card summary-card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title">Total Patients</h5>
                                <h2 class="card-value">@Model.TotalPatients</h2>
                            </div>
                            <i class="fas fa-users fa-3x opacity-25"></i>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4 mb-4">
                <div class="card summary-card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title">Today's Appointments</h5>
                                <h2 class="card-value">@Model.AppointmentsToday</h2>
                            </div>
                            <i class="fas fa-calendar-check fa-3x opacity-25"></i>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4 mb-4">
                <div class="card summary-card bg-info text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="card-title">Completed Today</h5>
                                <h2 class="card-value">@Model.CompletedAppointmentsToday</h2>
                            </div>
                            <i class="fas fa-check-circle fa-3x opacity-25"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="row">
            <!-- Upcoming Appointments -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header d-flex justify-content-between align-items-center bg-light">
                        <h5 class="mb-0">Upcoming Appointments</h5>
                        <a href="/appointments" class="btn btn-sm btn-outline-primary">View All</a>
                    </div>
                    <div class="card-body p-0">
                        @if (Model.HasUpcomingAppointments)
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var appointment in Model.UpcomingAppointments.OrderBy(a => a.Date))
                                {
                                    <div class="list-group-item">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div>
                                                <h6 class="mb-1">@appointment.Patient.FirstName @appointment.Patient.LastName</h6>
                                                <small class="text-muted">
                                                    With Dr. @appointment.Doctor.LastName (@appointment.Doctor.Specialty)
                                                </small>
                                            </div>
                                            <div class="text-end">
                                                <div class="fw-bold">@appointment.Date.ToString("MMM dd, h:mm tt")</div>
                                                <span class="badge @GetStatusBadgeClass(appointment.AppointmentStatus)">
                                                    @appointment.AppointmentStatus
                                                </span>
                                            </div>
                                        </div>
                                        @* @if (!string.IsNullOrEmpty(appointment.)) *@
                                        @* { *@
                                        @*     <div class="mt-2"> *@
                                        @*         <span class="fst-italic">Reason:</span> @appointment.Reason *@
                                        @*     </div> *@
                                        @* } *@
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center p-4">
                                <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                                <p class="text-muted">No upcoming appointments</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Recent Medical Records -->
            <div class="col-lg-6 mb-4">
                <div class="card h-100">
                    <div class="card-header d-flex justify-content-between align-items-center bg-light">
                        <h5 class="mb-0">Recent Medical Records</h5>
                        <a href="/medical-records" class="btn btn-sm btn-outline-primary">View All</a>
                    </div>
                    <div class="card-body p-0">
                        @if (Model.HasRecentMedicalHistories)
                        {
                            <div class="list-group list-group-flush">
                                @foreach (var record in Model.RecentMedicalHistories.OrderByDescending(r => r.DateOfVisit))
                                {
                                    <div class="list-group-item">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div>
                                                <h6 class="mb-1">@record.Patient.FirstName @record.Patient.LastName</h6>
                                                <small class="text-muted">
                                                    @record.DateOfVisit.ToString("MMM dd, yyyy")
                                                </small>
                                            </div>
                                            <div class="text-end">
                                                <span class="badge bg-secondary">Record</span>
                                            </div>
                                        </div>
                                        <div class="mt-2">
                                            <p class="mb-1"><strong>Diagnosis:</strong> @record.Diagnosis</p>
                                            <p class="mb-0"><strong>Treatment:</strong> @record.Treatment</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center p-4">
                                <i class="fas fa-file-medical fa-3x text-muted mb-3"></i>
                                <p class="text-muted">No recent medical records</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Today's Appointments -->
        <div class="row">
            <div class="col-12 mb-4">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center bg-light">
                        <h5 class="mb-0">Today's Schedule</h5>
                        <span class="badge bg-primary">@DateTime.Today.ToString("dddd, MMMM dd")</span>
                    </div>
                    <div class="card-body">
                        @if (Model.HasTodaysAppointments)
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Time</th>
                                            <th>Patient</th>
                                            <th>Doctor</th>
                                            <th>Specialty</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var appointment in Model.TodaysAppointments.OrderBy(a => a.Date))
                                        {
                                            <tr>
                                                <td>@appointment.Date.ToString("h:mm tt")</td>
                                                <td>@appointment.Patient.FirstName @appointment.Patient.LastName</td>
                                                <td>Dr. @appointment.Doctor.LastName</td>
                                                <td>@appointment.Doctor.Specialty</td>
                                                <td>
                                                    <span class="badge @GetStatusBadgeClass(appointment.AppointmentStatus)">
                                                        @appointment.AppointmentStatus
                                                    </span>
                                                </td>
                                                <td>
                                                    <button class="btn btn-sm btn-outline-primary">View</button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center p-4">
                                <i class="fas fa-calendar-day fa-3x text-muted mb-3"></i>
                                <p class="text-muted">No appointments scheduled for today</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private HomePageViewModel Model = new HomePageViewModel();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Model = await DataAggregator.GetHomePageDataAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading dashboard data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private string GetStatusBadgeClass(AppointmentStatus status)
    {
        return status switch
        {
            AppointmentStatus.Pending => "bg-warning",
            AppointmentStatus.Completed => "bg-success",
            AppointmentStatus.Canceled => "bg-danger",
            _ => "bg-secondary"
        };
    }
}